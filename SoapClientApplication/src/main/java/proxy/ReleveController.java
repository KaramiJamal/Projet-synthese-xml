
package proxy;

import jakarta.jws.WebMethod;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "ReleveController", targetNamespace = "http://controllers/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReleveController {


    /**
     * 
     * @return
     *     returns proxy.Releve
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "releves", targetNamespace = "http://controllers/", className = "proxy.Releves")
    @ResponseWrapper(localName = "relevesResponse", targetNamespace = "http://controllers/", className = "proxy.RelevesResponse")
    @Action(input = "http://controllers/ReleveController/relevesRequest", output = "http://controllers/ReleveController/relevesResponse")
    public Releve releves();

}
